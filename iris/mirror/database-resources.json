{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commonSettings": {
      "type": "object"
    },
    "osSettings": {
      "type": "object"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "machineSettings": {
      "type": "object"
    },
    "subnet": {
      "type": "object"
    },
    "masterIpAddress": {
      "type": "string"
    },
    "arbiterIpAddress": {
      "type": "string"
    },
    "dbType": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "privateIPAddress": {
      "type": "string"
    },
    "_secretsLocation": {
      "type": "string"
    },
    "_secretsLocationSasToken": {
      "type": "securestring"
    },
    "loadBalancerName": {
      "type": "string"
    }

  },
  "variables": {
    "namespace": "[parameters('commonSettings').namespace]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('subnet').vnet, parameters('subnet').name)]",
    "vmName": "[concat(variables('namespace'), 'vm')]",
    "nicName": "[concat(variables('namespace'), 'nic')]",
    "adminUsername": "[parameters('commonSettings').adminUsername]",
    "vmCount": "[parameters('machineSettings').vmCount]",
    "singleQuote": "'",
    "loadBalancerName": "[parameters('loadBalancerName')]"
  },
  "resources": [
    {
      "apiVersion": "2019-11-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "nicCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAddress": "[parameters('privateIPAddress')]",
              "privateIPAllocationMethod": "Static",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'BackendPool1')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2019-12-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex())]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
      ],
      "copy": {
        "name": "vmCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('machineSettings').availabilitySet)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('machineSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'), copyindex())]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[parameters('osSettings').imageReference]",
          "osDisk": {
            "name": "[concat(variables('vmName'), copyindex(),'_OSDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[parameters('machineSettings').diskCount]",
              "input": {
                "diskSizeGB": "[parameters('machineSettings').diskSize]",
                "lun": "[copyIndex('dataDisks')]",
                "caching": "None",
                "createOption": "Empty"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()) )]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyindex(), '/install_iris')]",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('vmName'), copyindex()))]"
      ],
      "copy": {
        "name": "scriptCopyLoop",
        "count": "[variables('vmCount')]"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[parameters('osSettings').scripts]"
        },
        "protectedSettings": {
          "commandToExecute": "[concat('bash install_iris.sh -m ', parameters('masterIpAddress'), ' -s ', parameters('subnet').prefix, ' -a ', parameters('arbiterIpAddress'), ' -t ', parameters('dbType'),' -L ',variables('singleQuote'),parameters('_secretsLocation'),variables('singleQuote'),' -T ',variables('singleQuote'),parameters('_secretsLocationSasToken'),variables('singleQuote') )]"
        }
      }
    }
  ],
  "outputs": {
    "masterip": {
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),0))).ipConfigurations[0].properties.privateIPAddress]",
      "type": "string"
    }
  }
}
